FROM resin/i386-alpine:3.4

RUN set -ex; \
    apk add --update \
        gcc \
        make \
        zlib \
        zlib-dev \
        openssl-dev \
        git \
        ca-certificates \
        curl \
        sqlite-dev \
        xz \
        bash \
        musl-dev \
        libc-dev \
    ; \
    rm rm -rf /var/cache/apk/*

RUN set -ex \
    && curl -SLO https://github.com/resin-io/docker/releases/download/1.7.1/docker-386-1.7.1.tar.xz \
    && tar -xvJf docker-386-1.7.1.tar.xz --strip-components=1 \
    && mv docker /usr/local/bin/docker \
    && rm -f docker-386-1.7.1.tar.xz

# Download Python 2.7.11
RUN set -ex \
    && curl -SLO "http://resin-packages.s3.amazonaws.com/python/v2.7.11/Python-2.7.11.linux-alpine-i386.tar.gz" \
    && echo "2aa245ae9901245934801298c380bc9cd3d5313316c7a33c44d5df36623d4144  Python-2.7.11.linux-alpine-i386.tar.gz" | sha256sum -c - \
    && tar -xzf "Python-2.7.11.linux-alpine-i386.tar.gz" --strip-components=1 \
    && rm -rf "Python-2.7.11.linux-alpine-i386.tar.gz"

# Build python 3.4 from source
RUN set -ex \
    && curl -SLO "http://resin-packages.s3.amazonaws.com/python/v3.4.4/Python-3.4.4.linux-alpine-i386.tar.gz" \
    && echo "ad97ac09ff348833673b80142eb3c6ca8e8658390a412060b4de3320701ec45b  Python-3.4.4.linux-alpine-i386.tar.gz" | sha256sum -c - \
    && tar -xzf "Python-3.4.4.linux-alpine-i386.tar.gz" --strip-components=1 \
    && rm -rf "Python-3.4.4.linux-alpine-i386.tar.gz"

# Make libpython findable
#ENV LD_LIBRARY_PATH /usr/local/lib

# Install setuptools
RUN set -ex; \
    curl -L https://bootstrap.pypa.io/ez_setup.py | python

# Install pip
RUN set -ex; \
    curl -L https://pypi.python.org/packages/source/p/pip/pip-7.0.1.tar.gz | tar -xz; \
    cd pip-7.0.1; \
    python setup.py install; \
    cd ..; \
    rm -rf pip-7.0.1

# Python3 requires a valid locale
#RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen
ENV LANG en_US.UTF-8

RUN adduser -h /home/user -D -s /bin/bash user
WORKDIR /code/

RUN pip install tox==2.1.1

ADD requirements.txt /code/
ADD requirements-dev.txt /code/
ADD .pre-commit-config.yaml /code/
ADD setup.py /code/
ADD tox.ini /code/
ADD compose /code/compose/
RUN tox --notest

RUN cd / \
    && git clone https://github.com/pyinstaller/pyinstaller.git \
    && cd /pyinstaller/bootloader \
    && python ./waf distclean --no-lsb all; \
    && ln -s /pyinstaller/PyInstaller /code/.tox/py27/lib/python2.7/site-packages/PyInstaller;

RUN ln -s /lib/libc.musl-x86.so.1 ldd
RUN ln -s /lib/ld-musl-i386.so.1 /lib/ld-linux.so.2

ADD . /code/
RUN chown -R user /code/
RUN cp -f linux-entrypoint.alpine-i386 /code/script/build/linux-entrypoint

ENTRYPOINT ["/code/.tox/py27/bin/docker-compose"]
